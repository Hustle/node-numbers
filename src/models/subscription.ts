/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { lazy, object, optional, Schema, string } from '../schema';
import {
  CallbackSubscription,
  callbackSubscriptionSchema,
} from './callbackSubscription';
import {
  EmailSubscription,
  emailSubscriptionSchema,
} from './emailSubscription';

export interface Subscription {
  subscriptionId?: string;
  orderTypeValue?: string;
  orderId?: string;
  subscriptionEventTypeValue?: string;
  emailSubscription?: EmailSubscription;
  callbackSubscription?: CallbackSubscription;
}

export const subscriptionSchema: Schema<Subscription> = object({
  subscriptionId: [
    'subscriptionId',
    optional(string()),
    { xmlName: 'SubscriptionId' },
  ],
  orderTypeValue: [
    'orderTypeValue',
    optional(string()),
    { xmlName: 'OrderType' },
  ],
  orderId: ['orderId', optional(string()), { xmlName: 'OrderId' }],
  subscriptionEventTypeValue: [
    'subscriptionEventTypeValue',
    optional(string()),
    { xmlName: 'EventType' },
  ],
  emailSubscription: [
    'emailSubscription',
    optional(lazy(() => emailSubscriptionSchema)),
    { xmlName: 'EmailSubscription' },
  ],
  callbackSubscription: [
    'callbackSubscription',
    optional(lazy(() => callbackSubscriptionSchema)),
    { xmlName: 'CallbackSubscription' },
  ],
});
