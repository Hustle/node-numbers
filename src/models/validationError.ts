/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import {
  array,
  boolean,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';

export interface ValidationError {
  id?: number;
  version?: number;
  type?: string;
  typeId?: string;
  code?: string;
  description?: string;
  telephoneNumbers?: string[];
  new?: boolean;
}

export const validationErrorSchema: Schema<ValidationError> = object({
  id: ['id', optional(number())],
  version: ['version', optional(number())],
  type: ['type', optional(string())],
  typeId: ['typeId', optional(string())],
  code: ['code', optional(string()), { xmlName: 'Code' }],
  description: ['description', optional(string()), { xmlName: 'Description' }],
  telephoneNumbers: [
    'telephoneNumbers',
    optional(array(string(), { xmlItemName: 'Tn' })),
    { xmlName: 'TelephoneNumbers' },
  ],
  new: ['new', optional(boolean())],
});
