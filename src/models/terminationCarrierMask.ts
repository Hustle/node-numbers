/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  CarrierMaskTypeEnum,
  carrierMaskTypeEnumSchema,
} from './carrierMaskTypeEnum';
import {
  NpaNxxCarrierMask,
  npaNxxCarrierMaskSchema,
} from './npaNxxCarrierMask';
import {
  PrefixCarrierMask,
  prefixCarrierMaskSchema,
} from './prefixCarrierMask';

export interface TerminationCarrierMask {
  id?: number;
  name?: string;
  carrierMaskType?: CarrierMaskTypeEnum;
  prefixCarrierMasks?: PrefixCarrierMask[];
  npaNxxCarrierMasks?: NpaNxxCarrierMask[];
  globalCarrierMask?: string;
  userType?: string;
}

export const terminationCarrierMaskSchema: Schema<TerminationCarrierMask> = object(
  {
    id: ['id', optional(number())],
    name: ['name', optional(string())],
    carrierMaskType: ['carrierMaskType', optional(carrierMaskTypeEnumSchema)],
    prefixCarrierMasks: [
      'prefixCarrierMasks',
      optional(
        array(
          lazy(() => prefixCarrierMaskSchema),
          { xmlItemName: 'PrefixCarrierMask' }
        )
      ),
      { xmlName: 'PrefixCarrierMasks' },
    ],
    npaNxxCarrierMasks: [
      'npaNxxCarrierMasks',
      optional(
        array(
          lazy(() => npaNxxCarrierMaskSchema),
          { xmlItemName: 'NpaNxxCarrierMask' }
        )
      ),
      { xmlName: 'NpaNxxCarrierMasks' },
    ],
    globalCarrierMask: ['globalCarrierMask', optional(string())],
    userType: ['userType', optional(string())],
  }
);
