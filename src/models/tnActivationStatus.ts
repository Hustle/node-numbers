/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import { LnpError, lnpErrorSchema } from './lnpError';

export interface TnActivationStatus {
  errors?: LnpError[];
  activationDate?: string;
  activatedTns?: string[];
  notActivatedTns?: string[];
}

export const tnActivationStatusSchema: Schema<TnActivationStatus> = object({
  errors: [
    'errors',
    optional(array(lazy(() => lnpErrorSchema), { xmlItemName: 'LnpError' })),
    { xmlName: 'Errors' },
  ],
  activationDate: [
    'activationDate',
    optional(string()),
    { xmlName: 'AutoActivationDate' },
  ],
  activatedTns: [
    'activatedTns',
    optional(array(string(), { xmlItemName: 'TelephoneNumber' })),
    { xmlName: 'ActivatedTelephoneNumbersList' },
  ],
  notActivatedTns: [
    'notActivatedTns',
    optional(array(string(), { xmlItemName: 'TelephoneNumber' })),
    { xmlName: 'NotYetActivatedTelephoneNumbersList' },
  ],
});
