/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { object, optional, Schema, string } from '../schema';

export interface E911GeocodeAddress {
  addressLine1?: string;
  houseNum?: string;
  houseNumSuffix?: string;
  prefixDirectional?: string;
  streetName?: string;
  streetSuffix?: string;
  postDirectional?: string;
  city?: string;
  state?: string;
  zip?: string;
  zipPlusFour?: string;
  country?: string;
  location?: string;
}

export const e911GeocodeAddressSchema: Schema<E911GeocodeAddress> = object({
  addressLine1: [
    'addressLine1',
    optional(string()),
    { xmlName: 'AddressLine1' },
  ],
  houseNum: ['houseNum', optional(string()), { xmlName: 'HouseNumber' }],
  houseNumSuffix: [
    'houseNumSuffix',
    optional(string()),
    { xmlName: 'HouseSuffix' },
  ],
  prefixDirectional: [
    'prefixDirectional',
    optional(string()),
    { xmlName: 'PreDirectional' },
  ],
  streetName: ['streetName', optional(string()), { xmlName: 'StreetName' }],
  streetSuffix: [
    'streetSuffix',
    optional(string()),
    { xmlName: 'StreetSuffix' },
  ],
  postDirectional: [
    'postDirectional',
    optional(string()),
    { xmlName: 'PostDirectional' },
  ],
  city: ['city', optional(string()), { xmlName: 'City' }],
  state: ['state', optional(string()), { xmlName: 'StateCode' }],
  zip: ['zip', optional(string()), { xmlName: 'Zip' }],
  zipPlusFour: ['zipPlusFour', optional(string()), { xmlName: 'PlusFour' }],
  country: ['country', optional(string()), { xmlName: 'Country' }],
  location: ['location', optional(string()), { xmlName: 'AddressLine2' }],
});
