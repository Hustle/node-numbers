/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { array, boolean, lazy, object, optional, Schema } from '../schema';
import { SipAuthError, sipAuthErrorSchema } from './sipAuthError';
import { Status7Enum, status7EnumSchema } from './status7Enum';

export interface SipAuthConfigurationPayload {
  enabled?: boolean;
  status?: Status7Enum;
  errors?: SipAuthError[];
}

export const sipAuthConfigurationPayloadSchema: Schema<SipAuthConfigurationPayload> = object(
  {
    enabled: ['enabled', optional(boolean()), { xmlName: 'Enabled' }],
    status: ['status', optional(status7EnumSchema), { xmlName: 'Status' }],
    errors: [
      'errors',
      optional(array(lazy(() => sipAuthErrorSchema), { xmlItemName: 'Error' })),
      { xmlName: 'Errors' },
    ],
  }
);
