/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { lazy, number, object, optional, Schema, string } from '../schema';
import { Attributes, attributesSchema } from './attributes';

export interface TerminationGateway {
  id?: number;
  accountId?: number;
  lcrId?: number;
  core2Id?: number;
  core2ProfileId?: number;
  siteId?: number;
  host?: string;
  port?: number;
  attributes?: Attributes;
}

export const terminationGatewaySchema: Schema<TerminationGateway> = object({
  id: ['id', optional(number())],
  accountId: ['accountId', optional(number())],
  lcrId: ['lcrId', optional(number())],
  core2Id: ['core2Id', optional(number())],
  core2ProfileId: ['core2ProfileId', optional(number())],
  siteId: ['siteId', optional(number())],
  host: ['host', optional(string())],
  port: ['port', optional(number())],
  attributes: [
    'attributes',
    optional(lazy(() => attributesSchema)),
    { xmlName: 'TerminationAttributes' },
  ],
});
