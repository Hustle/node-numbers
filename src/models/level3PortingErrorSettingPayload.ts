/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { object, optional, Schema, string } from '../schema';

export interface Level3PortingErrorSettingPayload {
  l3ErrorCode?: string;
  bandwidthErrorCode?: string;
  errorDescription?: string;
  installAction?: string;
  suppAction?: string;
  cancelAction?: string;
  portTnAction?: string;
  validateAction?: string;
}

export const level3PortingErrorSettingPayloadSchema: Schema<Level3PortingErrorSettingPayload> = object(
  {
    l3ErrorCode: [
      'l3ErrorCode',
      optional(string()),
      { xmlName: 'L3ErrorCode' },
    ],
    bandwidthErrorCode: [
      'bandwidthErrorCode',
      optional(string()),
      { xmlName: 'BandwidthErrorCode' },
    ],
    errorDescription: [
      'errorDescription',
      optional(string()),
      { xmlName: 'ErrorDescription' },
    ],
    installAction: [
      'installAction',
      optional(string()),
      { xmlName: 'InstallAction' },
    ],
    suppAction: ['suppAction', optional(string()), { xmlName: 'SuppAction' }],
    cancelAction: [
      'cancelAction',
      optional(string()),
      { xmlName: 'CancelAction' },
    ],
    portTnAction: [
      'portTnAction',
      optional(string()),
      { xmlName: 'PortTnAction' },
    ],
    validateAction: [
      'validateAction',
      optional(string()),
      { xmlName: 'ValidateAction' },
    ],
  }
);
