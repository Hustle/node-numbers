/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import {
  EmergencyNotificationGroupOrderPayload,
  emergencyNotificationGroupOrderPayloadSchema,
} from './emergencyNotificationGroupOrderPayload';
import {
  ProcessingStatus1Enum,
  processingStatus1EnumSchema,
} from './processingStatus1Enum';

export interface EmergencyNotificationGroupRecipientOrderResponse {
  orderId?: string;
  orderCreatedDate?: string;
  createdBy?: string;
  processingStatus?: ProcessingStatus1Enum;
  customerOrderId?: string;
  addedEmergencyNotificationGroup?: EmergencyNotificationGroupOrderPayload;
  modifiedEmergencyNotificationGroup?: EmergencyNotificationGroupOrderPayload;
  deleteEmergencyNotificationGroup?: EmergencyNotificationGroupOrderPayload;
  errorList?: string[];
}

export const emergencyNotificationGroupRecipientOrderResponseSchema: Schema<EmergencyNotificationGroupRecipientOrderResponse> = object(
  {
    orderId: ['orderId', optional(string()), { xmlName: 'OrderId' }],
    orderCreatedDate: [
      'orderCreatedDate',
      optional(string()),
      { xmlName: 'OrderCreatedDate' },
    ],
    createdBy: ['createdBy', optional(string()), { xmlName: 'CreatedBy' }],
    processingStatus: [
      'processingStatus',
      optional(processingStatus1EnumSchema),
      { xmlName: 'ProcessingStatus' },
    ],
    customerOrderId: [
      'customerOrderId',
      optional(string()),
      { xmlName: 'CustomerOrderId' },
    ],
    addedEmergencyNotificationGroup: [
      'addedEmergencyNotificationGroup',
      optional(lazy(() => emergencyNotificationGroupOrderPayloadSchema)),
      { xmlName: 'AddedEmergencyNotificationGroup' },
    ],
    modifiedEmergencyNotificationGroup: [
      'modifiedEmergencyNotificationGroup',
      optional(lazy(() => emergencyNotificationGroupOrderPayloadSchema)),
      { xmlName: 'ModifiedEmergencyNotificationGroup' },
    ],
    deleteEmergencyNotificationGroup: [
      'deleteEmergencyNotificationGroup',
      optional(lazy(() => emergencyNotificationGroupOrderPayloadSchema)),
      { xmlName: 'DeletedEmergencyNotificationGroup' },
    ],
    errorList: [
      'errorList',
      optional(array(string(), { xmlItemName: 'Description' })),
      { xmlName: 'ErrorList' },
    ],
  }
);
