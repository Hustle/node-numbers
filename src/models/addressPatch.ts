/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { boolean, lazy, object, optional, Schema } from '../schema';
import { StringPatch, stringPatchSchema } from './stringPatch';

export interface AddressPatch {
  delete?: boolean;
  housePrefix?: StringPatch;
  houseNo?: StringPatch;
  houseSuffix?: StringPatch;
  preDirectional?: StringPatch;
  streetName?: StringPatch;
  streetSuffix?: StringPatch;
  postDirectional?: StringPatch;
  addressLine2?: StringPatch;
  city?: StringPatch;
  stateCode?: StringPatch;
  zip?: StringPatch;
  zip4?: StringPatch;
  country?: StringPatch;
}

export const addressPatchSchema: Schema<AddressPatch> = object({
  delete: ['delete', optional(boolean()), { isAttr: true }],
  housePrefix: [
    'housePrefix',
    optional(lazy(() => stringPatchSchema)),
    { xmlName: 'HousePrefix' },
  ],
  houseNo: [
    'houseNo',
    optional(lazy(() => stringPatchSchema)),
    { xmlName: 'HouseNumber' },
  ],
  houseSuffix: [
    'houseSuffix',
    optional(lazy(() => stringPatchSchema)),
    { xmlName: 'HouseSuffix' },
  ],
  preDirectional: [
    'preDirectional',
    optional(lazy(() => stringPatchSchema)),
    { xmlName: 'PreDirectional' },
  ],
  streetName: [
    'streetName',
    optional(lazy(() => stringPatchSchema)),
    { xmlName: 'StreetName' },
  ],
  streetSuffix: [
    'streetSuffix',
    optional(lazy(() => stringPatchSchema)),
    { xmlName: 'StreetSuffix' },
  ],
  postDirectional: [
    'postDirectional',
    optional(lazy(() => stringPatchSchema)),
    { xmlName: 'PostDirectional' },
  ],
  addressLine2: [
    'addressLine2',
    optional(lazy(() => stringPatchSchema)),
    { xmlName: 'AddressLine2' },
  ],
  city: ['city', optional(lazy(() => stringPatchSchema)), { xmlName: 'City' }],
  stateCode: [
    'stateCode',
    optional(lazy(() => stringPatchSchema)),
    { xmlName: 'StateCode' },
  ],
  zip: ['zip', optional(lazy(() => stringPatchSchema)), { xmlName: 'Zip' }],
  zip4: [
    'zip4',
    optional(lazy(() => stringPatchSchema)),
    { xmlName: 'PlusFour' },
  ],
  country: [
    'country',
    optional(lazy(() => stringPatchSchema)),
    { xmlName: 'County' },
  ],
});
