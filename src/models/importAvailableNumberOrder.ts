/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { lazy, number, object, optional, Schema, string } from '../schema';
import {
  ImportAvailableNumberOrderType,
  importAvailableNumberOrderTypeSchema,
} from './importAvailableNumberOrderType';

export interface ImportAvailableNumberOrder {
  id?: string;
  name?: string;
  lastModifiedBy?: string;
  customerOrderId?: string;
  siteId?: number;
  peerId?: number;
  orderCreateDate?: string;
  orderType?: ImportAvailableNumberOrderType;
}

export const importAvailableNumberOrderSchema: Schema<ImportAvailableNumberOrder> = object(
  {
    id: ['id', optional(string())],
    name: ['name', optional(string()), { xmlName: 'Name' }],
    lastModifiedBy: [
      'lastModifiedBy',
      optional(string()),
      { xmlName: 'LastModifiedBy' },
    ],
    customerOrderId: [
      'customerOrderId',
      optional(string()),
      { xmlName: 'CustomerOrderId' },
    ],
    siteId: ['siteId', optional(number())],
    peerId: ['peerId', optional(number()), { xmlName: 'PeerId' }],
    orderCreateDate: [
      'orderCreateDate',
      optional(string()),
      { xmlName: 'OrderCreateDate' },
    ],
    orderType: [
      'orderType',
      optional(lazy(() => importAvailableNumberOrderTypeSchema)),
      { xmlName: 'ImportAvailableNumberOrderType' },
    ],
  }
);
