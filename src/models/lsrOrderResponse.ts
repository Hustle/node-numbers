/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { array, lazy, object, optional, Schema } from '../schema';
import { LsrOrderError, lsrOrderErrorSchema } from './lsrOrderError';
import { LsrOrderPayload, lsrOrderPayloadSchema } from './lsrOrderPayload';

export interface LsrOrderResponse {
  payload?: LsrOrderPayload;
  lsrOrderErrors?: LsrOrderError[];
}

export const lsrOrderResponseSchema: Schema<LsrOrderResponse> = object({
  payload: [
    'payload',
    optional(lazy(() => lsrOrderPayloadSchema)),
    { xmlName: 'LsrOrder' },
  ],
  lsrOrderErrors: [
    'lsrOrderErrors',
    optional(
      array(
        lazy(() => lsrOrderErrorSchema),
        { xmlItemName: 'LsrSubmissionOrderError' }
      )
    ),
    { xmlName: 'LsrOrderErrors' },
  ],
});
