/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import {
  boolean,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { Address, addressSchema } from './address';
import {
  SubscriberType1Enum,
  subscriberType1EnumSchema,
} from './subscriberType1Enum';

export interface Subscriber {
  id?: number;
  version?: number;
  subscriberType?: SubscriberType1Enum;
  businessName?: string;
  firstName?: string;
  middleInitial?: string;
  lastName?: string;
  genericName?: string;
  accountNumber?: string;
  accountPin?: string;
  serviceAddress?: Address;
  new?: boolean;
}

export const subscriberSchema: Schema<Subscriber> = object({
  id: ['id', optional(number())],
  version: ['version', optional(number())],
  subscriberType: [
    'subscriberType',
    optional(subscriberType1EnumSchema),
    { xmlName: 'SubscriberType' },
  ],
  businessName: [
    'businessName',
    optional(string()),
    { xmlName: 'BusinessName' },
  ],
  firstName: ['firstName', optional(string()), { xmlName: 'FirstName' }],
  middleInitial: [
    'middleInitial',
    optional(string()),
    { xmlName: 'MiddleInitial' },
  ],
  lastName: ['lastName', optional(string()), { xmlName: 'LastName' }],
  genericName: ['genericName', optional(string()), { xmlName: 'Name' }],
  accountNumber: [
    'accountNumber',
    optional(string()),
    { xmlName: 'AccountNumber' },
  ],
  accountPin: ['accountPin', optional(string()), { xmlName: 'PinNumber' }],
  serviceAddress: [
    'serviceAddress',
    optional(lazy(() => addressSchema)),
    { xmlName: 'ServiceAddress' },
  ],
  new: ['new', optional(boolean())],
});
