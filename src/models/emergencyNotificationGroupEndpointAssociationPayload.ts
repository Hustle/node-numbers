/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { lazy, object, optional, Schema, string } from '../schema';
import {
  EmergencyNotificationEndpointAssociationsPayload,
  emergencyNotificationEndpointAssociationsPayloadSchema,
} from './emergencyNotificationEndpointAssociationsPayload';
import {
  ProcessingStatus1Enum,
  processingStatus1EnumSchema,
} from './processingStatus1Enum';

export interface EmergencyNotificationGroupEndpointAssociationPayload {
  orderId?: string;
  orderCreatedDate?: string;
  createdBy?: string;
  processingStatus?: ProcessingStatus1Enum;
  customerOrderId?: string;
  emergencyNotificationEndpointAssociationsPayload?: EmergencyNotificationEndpointAssociationsPayload;
}

export const emergencyNotificationGroupEndpointAssociationPayloadSchema: Schema<EmergencyNotificationGroupEndpointAssociationPayload> = object(
  {
    orderId: ['orderId', optional(string()), { xmlName: 'OrderId' }],
    orderCreatedDate: [
      'orderCreatedDate',
      optional(string()),
      { xmlName: 'OrderCreatedDate' },
    ],
    createdBy: ['createdBy', optional(string()), { xmlName: 'CreatedBy' }],
    processingStatus: [
      'processingStatus',
      optional(processingStatus1EnumSchema),
      { xmlName: 'ProcessingStatus' },
    ],
    customerOrderId: [
      'customerOrderId',
      optional(string()),
      { xmlName: 'CustomerOrderId' },
    ],
    emergencyNotificationEndpointAssociationsPayload: [
      'emergencyNotificationEndpointAssociationsPayload',
      optional(
        lazy(() => emergencyNotificationEndpointAssociationsPayloadSchema)
      ),
      { xmlName: 'EmergencyNotificationEndpointAssociations' },
    ],
  }
);
