/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { Csr, csrSchema } from './csr';
import { CsrError, csrErrorSchema } from './csrError';
import { Status3Enum, status3EnumSchema } from './status3Enum';

export interface CsrOrderResponse {
  payload?: Csr;
  orderId?: string;
  status?: Status3Enum;
  customerOrderId?: string;
  lastModifiedBy?: string;
  orderCreateDate?: string;
  accountId?: number;
  lastModifiedDate?: string;
  accountNumber?: string;
  accountTelephoneNumber?: string;
  endUserName?: string;
  authorizingUserName?: string;
  customerCode?: string;
  endUserPIN?: string;
  endUserPassword?: string;
  addressLineOne?: string;
  city?: string;
  state?: string;
  zipCode?: string;
  typeOfService?: string;
  csrErrors?: CsrError[];
}

export const csrOrderResponseSchema: Schema<CsrOrderResponse> = object({
  payload: ['payload', optional(lazy(() => csrSchema)), { xmlName: 'CsrData' }],
  orderId: ['orderId', optional(string()), { xmlName: 'OrderId' }],
  status: ['status', optional(status3EnumSchema), { xmlName: 'Status' }],
  customerOrderId: [
    'customerOrderId',
    optional(string()),
    { xmlName: 'CustomerOrderId' },
  ],
  lastModifiedBy: [
    'lastModifiedBy',
    optional(string()),
    { xmlName: 'LastModifiedBy' },
  ],
  orderCreateDate: [
    'orderCreateDate',
    optional(string()),
    { xmlName: 'OrderCreateDate' },
  ],
  accountId: ['accountId', optional(number()), { xmlName: 'AccountId' }],
  lastModifiedDate: [
    'lastModifiedDate',
    optional(string()),
    { xmlName: 'LastModifiedDate' },
  ],
  accountNumber: [
    'accountNumber',
    optional(string()),
    { xmlName: 'AccountNumber' },
  ],
  accountTelephoneNumber: [
    'accountTelephoneNumber',
    optional(string()),
    { xmlName: 'AccountTelephoneNumber' },
  ],
  endUserName: ['endUserName', optional(string()), { xmlName: 'EndUserName' }],
  authorizingUserName: [
    'authorizingUserName',
    optional(string()),
    { xmlName: 'AuthorizingUserName' },
  ],
  customerCode: [
    'customerCode',
    optional(string()),
    { xmlName: 'CustomerCode' },
  ],
  endUserPIN: ['endUserPIN', optional(string()), { xmlName: 'EndUserPIN' }],
  endUserPassword: [
    'endUserPassword',
    optional(string()),
    { xmlName: 'EndUserPassword' },
  ],
  addressLineOne: [
    'addressLineOne',
    optional(string()),
    { xmlName: 'AddressLine1' },
  ],
  city: ['city', optional(string()), { xmlName: 'City' }],
  state: ['state', optional(string()), { xmlName: 'State' }],
  zipCode: ['zipCode', optional(string()), { xmlName: 'ZIPCode' }],
  typeOfService: [
    'typeOfService',
    optional(string()),
    { xmlName: 'TypeOfService' },
  ],
  csrErrors: [
    'csrErrors',
    optional(array(lazy(() => csrErrorSchema), { xmlItemName: 'Error' })),
    { xmlName: 'Errors' },
  ],
});
