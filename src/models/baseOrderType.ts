/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import {
  array,
  boolean,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';

export interface BaseOrderType {
  telephoneNumbers?: string[];
  reservationIds?: string[];
  rateCenterAbbreviation?: string;
  state?: string;
  quantity?: number;
  npa?: string;
  npaNxx?: string;
  tollFreeWildCardPattern?: string;
  vanity?: string;
  lata?: string;
  zip?: string;
  city?: string;
  npaNxxBlock?: string;
  localVanity?: string;
  endsIn?: boolean;
}

export const baseOrderTypeSchema: Schema<BaseOrderType> = object({
  telephoneNumbers: [
    'telephoneNumbers',
    optional(array(string(), { xmlItemName: 'TelephoneNumber' })),
    { xmlName: 'TelephoneNumberList' },
  ],
  reservationIds: [
    'reservationIds',
    optional(array(string(), { xmlItemName: 'ReservationId' })),
    { xmlName: 'ReservationIdList' },
  ],
  rateCenterAbbreviation: [
    'rateCenterAbbreviation',
    optional(string()),
    { xmlName: 'RateCenter' },
  ],
  state: ['state', optional(string()), { xmlName: 'State' }],
  quantity: ['quantity', optional(number()), { xmlName: 'Quantity' }],
  npa: ['npa', optional(string()), { xmlName: 'AreaCode' }],
  npaNxx: ['npaNxx', optional(string()), { xmlName: 'NpaNxx' }],
  tollFreeWildCardPattern: [
    'tollFreeWildCardPattern',
    optional(string()),
    { xmlName: 'TollFreeWildCardPattern' },
  ],
  vanity: ['vanity', optional(string()), { xmlName: 'TollFreeVanity' }],
  lata: ['lata', optional(string()), { xmlName: 'LATA' }],
  zip: ['zip', optional(string()), { xmlName: 'Zip' }],
  city: ['city', optional(string()), { xmlName: 'City' }],
  npaNxxBlock: ['npaNxxBlock', optional(string()), { xmlName: 'NpaNxxX' }],
  localVanity: ['localVanity', optional(string()), { xmlName: 'LocalVanity' }],
  endsIn: ['endsIn', optional(boolean()), { xmlName: 'EndsIn' }],
});
