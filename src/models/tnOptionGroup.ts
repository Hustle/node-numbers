/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import { A2pSettings, a2pSettingsSchema } from './a2pSettings';
import {
  OriginationRoutePlan,
  originationRoutePlanSchema,
} from './originationRoutePlan';

export interface TnOptionGroup {
  numberFormat?: string;
  rpidFormat?: string;
  rewriteUser?: string;
  callForward?: string;
  cnamLookup?: string;
  portOutPasscode?: string;
  protect?: string;
  sms?: string;
  finalDestinationUri?: string;
  a2pSettings?: A2pSettings;
  nnid?: string;
  espid?: string;
  originationRoutePlan?: OriginationRoutePlan;
  groupNumbers?: string[];
}

export const tnOptionGroupSchema: Schema<TnOptionGroup> = object({
  numberFormat: [
    'numberFormat',
    optional(string()),
    { xmlName: 'NumberFormat' },
  ],
  rpidFormat: ['rpidFormat', optional(string()), { xmlName: 'RPIDFormat' }],
  rewriteUser: ['rewriteUser', optional(string()), { xmlName: 'RewriteUser' }],
  callForward: ['callForward', optional(string()), { xmlName: 'CallForward' }],
  cnamLookup: [
    'cnamLookup',
    optional(string()),
    { xmlName: 'CallingNameDisplay' },
  ],
  portOutPasscode: [
    'portOutPasscode',
    optional(string()),
    { xmlName: 'PortOutPasscode' },
  ],
  protect: ['protect', optional(string()), { xmlName: 'Protected' }],
  sms: ['sms', optional(string()), { xmlName: 'Sms' }],
  finalDestinationUri: [
    'finalDestinationUri',
    optional(string()),
    { xmlName: 'FinalDestinationURI' },
  ],
  a2pSettings: [
    'a2pSettings',
    optional(lazy(() => a2pSettingsSchema)),
    { xmlName: 'A2pSettings' },
  ],
  nnid: ['nnid', optional(string()), { xmlName: 'NNID' }],
  espid: ['espid', optional(string()), { xmlName: 'ESPID' }],
  originationRoutePlan: [
    'originationRoutePlan',
    optional(lazy(() => originationRoutePlanSchema)),
    { xmlName: 'OriginationRoutePlan' },
  ],
  groupNumbers: [
    'groupNumbers',
    optional(array(string(), { xmlItemName: 'TelephoneNumber' })),
    { xmlName: 'TelephoneNumbers' },
  ],
});
