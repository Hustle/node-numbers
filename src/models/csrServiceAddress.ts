/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { object, optional, Schema, string } from '../schema';

export interface CsrServiceAddress {
  unparsedAddress?: string;
  houseNumber?: string;
  housePrefix?: string;
  houseSuffix?: string;
  preDirectional?: string;
  streetName?: string;
  streetSuffix?: string;
  postDirectional?: string;
  addressLine2?: string;
  city?: string;
  state?: string;
  zip?: string;
}

export const csrServiceAddressSchema: Schema<CsrServiceAddress> = object({
  unparsedAddress: [
    'unparsedAddress',
    optional(string()),
    { xmlName: 'UnparsedAddress' },
  ],
  houseNumber: ['houseNumber', optional(string()), { xmlName: 'HouseNumber' }],
  housePrefix: ['housePrefix', optional(string()), { xmlName: 'HousePrefix' }],
  houseSuffix: ['houseSuffix', optional(string()), { xmlName: 'HouseSuffix' }],
  preDirectional: [
    'preDirectional',
    optional(string()),
    { xmlName: 'PreDirectional' },
  ],
  streetName: ['streetName', optional(string()), { xmlName: 'StreetName' }],
  streetSuffix: [
    'streetSuffix',
    optional(string()),
    { xmlName: 'StreetSuffix' },
  ],
  postDirectional: [
    'postDirectional',
    optional(string()),
    { xmlName: 'PostDirectional' },
  ],
  addressLine2: [
    'addressLine2',
    optional(string()),
    { xmlName: 'AddressLine2' },
  ],
  city: ['city', optional(string()), { xmlName: 'City' }],
  state: ['state', optional(string()), { xmlName: 'State' }],
  zip: ['zip', optional(string()), { xmlName: 'Zip' }],
});
