/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import {
  EmergencyNotificationRecipientPayload,
  emergencyNotificationRecipientPayloadSchema,
} from './emergencyNotificationRecipientPayload';

export interface EmergencyNotificationGroupOrderPayload {
  identifier?: string;
  description?: string;
  addedEmergencyNotificationRecipients?: EmergencyNotificationRecipientPayload[];
  deletedEmergencyNotificationRecipients?: EmergencyNotificationRecipientPayload[];
  errorList?: string[];
}

export const emergencyNotificationGroupOrderPayloadSchema: Schema<EmergencyNotificationGroupOrderPayload> = object(
  {
    identifier: ['identifier', optional(string()), { xmlName: 'Identifier' }],
    description: [
      'description',
      optional(string()),
      { xmlName: 'Description' },
    ],
    addedEmergencyNotificationRecipients: [
      'addedEmergencyNotificationRecipients',
      optional(
        array(
          lazy(() => emergencyNotificationRecipientPayloadSchema),
          { xmlItemName: 'EmergencyNotificationRecipient' }
        )
      ),
      { xmlName: 'AddedEmergencyNotificationRecipients' },
    ],
    deletedEmergencyNotificationRecipients: [
      'deletedEmergencyNotificationRecipients',
      optional(
        array(
          lazy(() => emergencyNotificationRecipientPayloadSchema),
          { xmlItemName: 'EmergencyNotificationRecipient' }
        )
      ),
      { xmlName: 'DeletedEmergencyNotificationRecipients' },
    ],
    errorList: [
      'errorList',
      optional(array(string(), { xmlItemName: 'Description' })),
      { xmlName: 'ErrorList' },
    ],
  }
);
