/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  ProcessingStatus5Enum,
  processingStatus5EnumSchema,
} from './processingStatus5Enum';
import { TnOptionGroup, tnOptionGroupSchema } from './tnOptionGroup';
import {
  TnOptionOrderError,
  tnOptionOrderErrorSchema,
} from './tnOptionOrderError';
import {
  TnOptionOrderWarningPayload,
  tnOptionOrderWarningPayloadSchema,
} from './tnOptionOrderWarningPayload';

export interface TnOptionOrderPayload {
  id?: string;
  accountId?: number;
  name?: string;
  lastModifiedDateInUtc?: string;
  lastModifiedBy?: string;
  createdByUser?: string;
  customerOrderId?: string;
  siteId?: number;
  peerId?: number;
  orderCreateDate?: string;
  processingStatus?: ProcessingStatus5Enum;
  tnOptionGroups?: TnOptionGroup[];
  errors?: TnOptionOrderError[];
  warnings?: TnOptionOrderWarningPayload[];
}

export const tnOptionOrderPayloadSchema: Schema<TnOptionOrderPayload> = object({
  id: ['id', optional(string()), { xmlName: 'OrderId' }],
  accountId: ['accountId', optional(number()), { xmlName: 'AccountId' }],
  name: ['name', optional(string()), { xmlName: 'Name' }],
  lastModifiedDateInUtc: [
    'lastModifiedDateInUtc',
    optional(string()),
    { xmlName: 'LastModifiedDate' },
  ],
  lastModifiedBy: [
    'lastModifiedBy',
    optional(string()),
    { xmlName: 'LastModifiedBy' },
  ],
  createdByUser: [
    'createdByUser',
    optional(string()),
    { xmlName: 'CreatedByUser' },
  ],
  customerOrderId: [
    'customerOrderId',
    optional(string()),
    { xmlName: 'CustomerOrderId' },
  ],
  siteId: ['siteId', optional(number()), { xmlName: 'SiteId' }],
  peerId: ['peerId', optional(number()), { xmlName: 'PeerId' }],
  orderCreateDate: [
    'orderCreateDate',
    optional(string()),
    { xmlName: 'OrderCreateDate' },
  ],
  processingStatus: [
    'processingStatus',
    optional(processingStatus5EnumSchema),
    { xmlName: 'ProcessingStatus' },
  ],
  tnOptionGroups: [
    'tnOptionGroups',
    optional(
      array(lazy(() => tnOptionGroupSchema), { xmlItemName: 'TnOptionGroup' })
    ),
    { xmlName: 'TnOptionGroups' },
  ],
  errors: [
    'errors',
    optional(
      array(lazy(() => tnOptionOrderErrorSchema), { xmlItemName: 'Error' })
    ),
    { xmlName: 'ErrorList' },
  ],
  warnings: [
    'warnings',
    optional(
      array(
        lazy(() => tnOptionOrderWarningPayloadSchema),
        { xmlItemName: 'Warning' }
      )
    ),
    { xmlName: 'Warnings' },
  ],
});
