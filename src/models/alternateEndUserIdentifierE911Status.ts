/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { lazy, object, optional, Schema, string } from '../schema';
import { Address, addressSchema } from './address';
import {
  EmergencyNotificationGroupPayload,
  emergencyNotificationGroupPayloadSchema,
} from './emergencyNotificationGroupPayload';

export interface AlternateEndUserIdentifierE911Status {
  callerName?: string;
  address?: Address;
  groupPayload?: EmergencyNotificationGroupPayload;
}

export const alternateEndUserIdentifierE911StatusSchema: Schema<AlternateEndUserIdentifierE911Status> = object(
  {
    callerName: ['callerName', optional(string()), { xmlName: 'CallerName' }],
    address: [
      'address',
      optional(lazy(() => addressSchema)),
      { xmlName: 'Address' },
    ],
    groupPayload: [
      'groupPayload',
      optional(lazy(() => emergencyNotificationGroupPayloadSchema)),
      { xmlName: 'EmergencyNotificationGroup' },
    ],
  }
);
