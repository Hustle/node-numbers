/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { boolean, number, object, optional, Schema, string } from '../schema';

export interface LegacyTerminationConfigurationPayload {
  customerTraffic?: string;
  cpsQueue?: number;
  concurrentOutboundCalls?: number;
  concurrentBidirectionalCalls?: number;
  billingType?: string;
  rateType?: string;
  discountPercentage?: number;
  guaranteedTermination?: boolean;
}

export const legacyTerminationConfigurationPayloadSchema: Schema<LegacyTerminationConfigurationPayload> = object(
  {
    customerTraffic: [
      'customerTraffic',
      optional(string()),
      { xmlName: 'CustomerTrafficAllowed' },
    ],
    cpsQueue: ['cpsQueue', optional(number()), { xmlName: 'CpsQueue' }],
    concurrentOutboundCalls: [
      'concurrentOutboundCalls',
      optional(number()),
      { xmlName: 'ConcurrentOutboundCalls' },
    ],
    concurrentBidirectionalCalls: [
      'concurrentBidirectionalCalls',
      optional(number()),
      { xmlName: 'ConcurrentBidirectionalCalls' },
    ],
    billingType: [
      'billingType',
      optional(string()),
      { xmlName: 'BillingType' },
    ],
    rateType: ['rateType', optional(string()), { xmlName: 'RateType' }],
    discountPercentage: [
      'discountPercentage',
      optional(number()),
      { xmlName: 'DiscountPercentage' },
    ],
    guaranteedTermination: [
      'guaranteedTermination',
      optional(boolean()),
      { xmlName: 'GuaranteedTermination' },
    ],
  }
);
