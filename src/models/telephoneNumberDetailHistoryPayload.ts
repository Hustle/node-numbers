/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  HostedTelephoneNumberDetailHistory,
  hostedTelephoneNumberDetailHistorySchema,
} from './hostedTelephoneNumberDetailHistory';
import {
  MessagingSettings,
  messagingSettingsSchema,
} from './messagingSettings';
import {
  OriginationRoutePlan,
  originationRoutePlanSchema,
} from './originationRoutePlan';
import { SipPeer, sipPeerSchema } from './sipPeer';
import { Site, siteSchema } from './site';
import { TelephoneNumber, telephoneNumberSchema } from './telephoneNumber';
import { TnOptions, tnOptionsSchema } from './tnOptions';

export interface TelephoneNumberDetailHistoryPayload {
  city?: string;
  lata?: number;
  state?: string;
  telephoneNumber?: TelephoneNumber;
  country?: string;
  tnType?: string;
  tier?: number;
  vendorId?: number;
  vendorName?: string;
  rateCenter?: string;
  status?: string;
  accountId?: number;
  site?: Site;
  sipPeer?: SipPeer;
  serviceTypesOwned?: string[];
  lastModified?: string;
  inServiceDate?: string;
  tnAttributes?: string[];
  messagingSettings?: MessagingSettings;
  tnOptions?: TnOptions;
  originationRoutePlan?: OriginationRoutePlan;
  hostedTelephoneNumberDetailHistories?: HostedTelephoneNumberDetailHistory[];
}

export const telephoneNumberDetailHistoryPayloadSchema: Schema<TelephoneNumberDetailHistoryPayload> = object(
  {
    city: ['city', optional(string()), { xmlName: 'City' }],
    lata: ['lata', optional(number()), { xmlName: 'Lata' }],
    state: ['state', optional(string()), { xmlName: 'State' }],
    telephoneNumber: [
      'telephoneNumber',
      optional(lazy(() => telephoneNumberSchema)),
      { xmlName: 'FullNumber' },
    ],
    country: ['country', optional(string()), { xmlName: 'Country' }],
    tnType: ['tnType', optional(string()), { xmlName: 'TnType' }],
    tier: ['tier', optional(number()), { xmlName: 'Tier' }],
    vendorId: ['vendorId', optional(number()), { xmlName: 'VendorId' }],
    vendorName: ['vendorName', optional(string()), { xmlName: 'VendorName' }],
    rateCenter: ['rateCenter', optional(string()), { xmlName: 'RateCenter' }],
    status: ['status', optional(string()), { xmlName: 'Status' }],
    accountId: ['accountId', optional(number()), { xmlName: 'AccountId' }],
    site: ['site', optional(lazy(() => siteSchema)), { xmlName: 'Site' }],
    sipPeer: [
      'sipPeer',
      optional(lazy(() => sipPeerSchema)),
      { xmlName: 'SipPeer' },
    ],
    serviceTypesOwned: [
      'serviceTypesOwned',
      optional(array(string(), { xmlItemName: 'ServiceType' })),
      { xmlName: 'ServiceTypes' },
    ],
    lastModified: [
      'lastModified',
      optional(string()),
      { xmlName: 'LastModified' },
    ],
    inServiceDate: [
      'inServiceDate',
      optional(string()),
      { xmlName: 'InServiceDate' },
    ],
    tnAttributes: [
      'tnAttributes',
      optional(array(string(), { xmlItemName: 'TnAttribute' })),
      { xmlName: 'TnAttributes' },
    ],
    messagingSettings: [
      'messagingSettings',
      optional(lazy(() => messagingSettingsSchema)),
      { xmlName: 'MessagingSettings' },
    ],
    tnOptions: [
      'tnOptions',
      optional(lazy(() => tnOptionsSchema)),
      { xmlName: 'TnOptions' },
    ],
    originationRoutePlan: [
      'originationRoutePlan',
      optional(lazy(() => originationRoutePlanSchema)),
      { xmlName: 'OriginationRoutePlan' },
    ],
    hostedTelephoneNumberDetailHistories: [
      'hostedTelephoneNumberDetailHistories',
      optional(
        array(
          lazy(() => hostedTelephoneNumberDetailHistorySchema),
          { xmlItemName: 'HostedTelephoneNumberDetail' }
        )
      ),
      { xmlName: 'HostedTelephoneNumberDetails' },
    ],
  }
);
