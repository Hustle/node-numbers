/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { boolean, number, object, optional, Schema, string } from '../schema';

export interface Mm4Settings {
  domain?: string;
  connValidWindow?: number;
  maxConn?: number;
  persistentConn?: boolean;
  keepAliveNoop?: boolean;
  skipAck?: boolean;
  allowMultiRecepient?: boolean;
  connMessageRatio?: number;
  connSentTimeout?: number;
  maxMessagesInQueue?: number;
  loopAllowed?: boolean;
  forceAck?: boolean;
  asyncMessageFlowSupported?: boolean;
}

export const mm4SettingsSchema: Schema<Mm4Settings> = object({
  domain: ['domain', optional(string()), { xmlName: 'Domain' }],
  connValidWindow: [
    'connValidWindow',
    optional(number()),
    { xmlName: 'ConnValidWindow' },
  ],
  maxConn: ['maxConn', optional(number()), { xmlName: 'MaxConn' }],
  persistentConn: [
    'persistentConn',
    optional(boolean()),
    { xmlName: 'PersistentConn' },
  ],
  keepAliveNoop: [
    'keepAliveNoop',
    optional(boolean()),
    { xmlName: 'KeepAliveNoop' },
  ],
  skipAck: ['skipAck', optional(boolean()), { xmlName: 'SkipAck' }],
  allowMultiRecepient: [
    'allowMultiRecepient',
    optional(boolean()),
    { xmlName: 'AllowMultiRecepient' },
  ],
  connMessageRatio: [
    'connMessageRatio',
    optional(number()),
    { xmlName: 'ConnMessageRatio' },
  ],
  connSentTimeout: [
    'connSentTimeout',
    optional(number()),
    { xmlName: 'ConnSentTimeout' },
  ],
  maxMessagesInQueue: [
    'maxMessagesInQueue',
    optional(number()),
    { xmlName: 'MaxMessagesInQueue' },
  ],
  loopAllowed: ['loopAllowed', optional(boolean()), { xmlName: 'LoopAllowed' }],
  forceAck: ['forceAck', optional(boolean()), { xmlName: 'ForceAck' }],
  asyncMessageFlowSupported: [
    'asyncMessageFlowSupported',
    optional(boolean()),
    { xmlName: 'AsyncMessageFlowSupported' },
  ],
});
