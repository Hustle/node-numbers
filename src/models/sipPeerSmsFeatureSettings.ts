/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { boolean, object, optional, Schema, string } from '../schema';
import { A2pLongCodeEnum, a2pLongCodeEnumSchema } from './a2pLongCodeEnum';
import { ProtocolEnum, protocolEnumSchema } from './protocolEnum';

export interface SipPeerSmsFeatureSettings {
  tollFree?: boolean;
  shortCode?: boolean;
  a2pLongCode?: A2pLongCodeEnum;
  a2pMessageClass?: string;
  a2pCampaignId?: string;
  protocol?: ProtocolEnum;
  zone1?: boolean;
  zone2?: boolean;
  zone3?: boolean;
  zone4?: boolean;
  zone5?: boolean;
}

export const sipPeerSmsFeatureSettingsSchema: Schema<SipPeerSmsFeatureSettings> = object(
  {
    tollFree: ['tollFree', optional(boolean()), { xmlName: 'TollFree' }],
    shortCode: ['shortCode', optional(boolean()), { xmlName: 'ShortCode' }],
    a2pLongCode: [
      'a2pLongCode',
      optional(a2pLongCodeEnumSchema),
      { xmlName: 'A2pLongCode' },
    ],
    a2pMessageClass: [
      'a2pMessageClass',
      optional(string()),
      { xmlName: 'A2pMessageClass' },
    ],
    a2pCampaignId: [
      'a2pCampaignId',
      optional(string()),
      { xmlName: 'A2pCampaignId' },
    ],
    protocol: [
      'protocol',
      optional(protocolEnumSchema),
      { xmlName: 'Protocol' },
    ],
    zone1: ['zone1', optional(boolean()), { xmlName: 'Zone1' }],
    zone2: ['zone2', optional(boolean()), { xmlName: 'Zone2' }],
    zone3: ['zone3', optional(boolean()), { xmlName: 'Zone3' }],
    zone4: ['zone4', optional(boolean()), { xmlName: 'Zone4' }],
    zone5: ['zone5', optional(boolean()), { xmlName: 'Zone5' }],
  }
);
