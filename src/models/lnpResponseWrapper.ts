/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { LnpError, lnpErrorSchema } from './lnpError';
import { Note, noteSchema } from './note';
import {
  TelephoneNumberDetailsWrapper,
  telephoneNumberDetailsWrapperSchema,
} from './telephoneNumberDetailsWrapper';

export interface LnpResponseWrapper {
  accountId?: number;
  orderId?: string;
  lastModifiedBy?: string;
  lastModifiedDate?: string;
  countOfTNs?: number;
  bandwidthPrime?: string;
  activityState?: string;
  lastModifiedNote?: Note;
  suppCount?: number;
  orderType?: string;
  customerOrderId?: string;
  orderDate?: string;
  billingTelephoneNumber?: string;
  newBillingTelephoneNumber?: string;
  vendorId?: string;
  errorMessage?: string;
  errorCode?: number;
  requestedFocDate?: string;
  actualFocDate?: string;
  processingStatus?: string;
  vendorOrder?: string;
  vendorName?: string;
  lnpLosingCarrierId?: string;
  lnpLosingCarrierName?: string;
  fullNumber?: string;
  lnpErrors?: LnpError[];
  telephoneNumberDetails?: TelephoneNumberDetailsWrapper;
  companyName?: string;
  bulkPortinOrderId?: string;
}

export const lnpResponseWrapperSchema: Schema<LnpResponseWrapper> = object({
  accountId: ['accountId', optional(number())],
  orderId: ['orderId', optional(string()), { xmlName: 'OrderId' }],
  lastModifiedBy: ['lastModifiedBy', optional(string()), { xmlName: 'userId' }],
  lastModifiedDate: ['lastModifiedDate', optional(string())],
  countOfTNs: ['countOfTNs', optional(number()), { xmlName: 'CountOfTNs' }],
  bandwidthPrime: [
    'bandwidthPrime',
    optional(string()),
    { xmlName: 'BandwidthPrime' },
  ],
  activityState: [
    'activityState',
    optional(string()),
    { xmlName: 'ActivityState' },
  ],
  lastModifiedNote: [
    'lastModifiedNote',
    optional(lazy(() => noteSchema)),
    { xmlName: 'LastModifiedNote' },
  ],
  suppCount: ['suppCount', optional(number()), { xmlName: 'SuppCount' }],
  orderType: ['orderType', optional(string()), { xmlName: 'OrderType' }],
  customerOrderId: [
    'customerOrderId',
    optional(string()),
    { xmlName: 'CustomerOrderId' },
  ],
  orderDate: ['orderDate', optional(string()), { xmlName: 'OrderDate' }],
  billingTelephoneNumber: [
    'billingTelephoneNumber',
    optional(string()),
    { xmlName: 'BillingTelephoneNumber' },
  ],
  newBillingTelephoneNumber: [
    'newBillingTelephoneNumber',
    optional(string()),
    { xmlName: 'NewBillingTelephoneNumber' },
  ],
  vendorId: ['vendorId', optional(string()), { xmlName: 'VendorId' }],
  errorMessage: [
    'errorMessage',
    optional(string()),
    { xmlName: 'ErrorMessage' },
  ],
  errorCode: ['errorCode', optional(number()), { xmlName: 'ErrorCode' }],
  requestedFocDate: [
    'requestedFocDate',
    optional(string()),
    { xmlName: 'RequestedFOCDate' },
  ],
  actualFocDate: [
    'actualFocDate',
    optional(string()),
    { xmlName: 'ActualFOCDate' },
  ],
  processingStatus: [
    'processingStatus',
    optional(string()),
    { xmlName: 'ProcessingStatus' },
  ],
  vendorOrder: ['vendorOrder', optional(string()), { xmlName: 'PON' }],
  vendorName: ['vendorName', optional(string()), { xmlName: 'VendorName' }],
  lnpLosingCarrierId: [
    'lnpLosingCarrierId',
    optional(string()),
    { xmlName: 'LNPLosingCarrierId' },
  ],
  lnpLosingCarrierName: [
    'lnpLosingCarrierName',
    optional(string()),
    { xmlName: 'LNPLosingCarrierName' },
  ],
  fullNumber: ['fullNumber', optional(string()), { xmlName: 'FullNumber' }],
  lnpErrors: [
    'lnpErrors',
    optional(array(lazy(() => lnpErrorSchema), { xmlItemName: 'LnpError' })),
    { xmlName: 'Errors' },
  ],
  telephoneNumberDetails: [
    'telephoneNumberDetails',
    optional(lazy(() => telephoneNumberDetailsWrapperSchema)),
    { xmlName: 'TelephoneNumberDetails' },
  ],
  companyName: ['companyName', optional(string()), { xmlName: 'CompanyName' }],
  bulkPortinOrderId: [
    'bulkPortinOrderId',
    optional(string()),
    { xmlName: 'BulkPortinOrderId' },
  ],
});
