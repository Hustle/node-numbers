/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { lazy, number, object, optional, Schema, string } from '../schema';
import { LidbOrderPayload, lidbOrderPayloadSchema } from './lidbOrderPayload';
import { OrderTypeEnum, orderTypeEnumSchema } from './orderTypeEnum';

export interface LidbOrderResponse {
  payload?: LidbOrderPayload;
  orderType?: OrderTypeEnum;
  errorCode?: number;
  responseDescription?: string;
  requestedAccountId?: number;
}

export const lidbOrderResponseSchema: Schema<LidbOrderResponse> = object({
  payload: [
    'payload',
    optional(lazy(() => lidbOrderPayloadSchema)),
    { xmlName: 'LidbOrder' },
  ],
  orderType: ['orderType', optional(orderTypeEnumSchema)],
  errorCode: ['errorCode', optional(number())],
  responseDescription: ['responseDescription', optional(string())],
  requestedAccountId: ['requestedAccountId', optional(number())],
});
