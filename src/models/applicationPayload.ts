/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { lazy, object, optional, Schema, string } from '../schema';
import { CallbackCreds, callbackCredsSchema } from './callbackCreds';

export interface ApplicationPayload {
  applicationId?: string;
  serviceType?: string;
  applicationName?: string;
  callbackUrl?: string;
  msgCallbackUrl?: string;
  callInitiatedCallbackUrl?: string;
  callInitiatedMethod?: string;
  callStatusCallbackUrl?: string;
  callStatusMethod?: string;
  callbackCreds?: CallbackCreds;
  callInitiatedFallbackUrl?: string;
  callInitiatedFallbackMethod?: string;
  callInitiatedFallbackCreds?: CallbackCreds;
  callbackTimeout?: string;
}

export const applicationPayloadSchema: Schema<ApplicationPayload> = object({
  applicationId: [
    'applicationId',
    optional(string()),
    { xmlName: 'ApplicationId' },
  ],
  serviceType: ['serviceType', optional(string()), { xmlName: 'ServiceType' }],
  applicationName: [
    'applicationName',
    optional(string()),
    { xmlName: 'AppName' },
  ],
  callbackUrl: ['callbackUrl', optional(string()), { xmlName: 'CallbackUrl' }],
  msgCallbackUrl: [
    'msgCallbackUrl',
    optional(string()),
    { xmlName: 'MsgCallbackUrl' },
  ],
  callInitiatedCallbackUrl: [
    'callInitiatedCallbackUrl',
    optional(string()),
    { xmlName: 'CallInitiatedCallbackUrl' },
  ],
  callInitiatedMethod: [
    'callInitiatedMethod',
    optional(string()),
    { xmlName: 'CallInitiatedMethod' },
  ],
  callStatusCallbackUrl: [
    'callStatusCallbackUrl',
    optional(string()),
    { xmlName: 'CallStatusCallbackUrl' },
  ],
  callStatusMethod: [
    'callStatusMethod',
    optional(string()),
    { xmlName: 'CallStatusMethod' },
  ],
  callbackCreds: [
    'callbackCreds',
    optional(lazy(() => callbackCredsSchema)),
    { xmlName: 'CallbackCreds' },
  ],
  callInitiatedFallbackUrl: [
    'callInitiatedFallbackUrl',
    optional(string()),
    { xmlName: 'CallInitiatedFallbackUrl' },
  ],
  callInitiatedFallbackMethod: [
    'callInitiatedFallbackMethod',
    optional(string()),
    { xmlName: 'CallInitiatedFallbackMethod' },
  ],
  callInitiatedFallbackCreds: [
    'callInitiatedFallbackCreds',
    optional(lazy(() => callbackCredsSchema)),
    { xmlName: 'CallInitiatedFallbackCreds' },
  ],
  callbackTimeout: [
    'callbackTimeout',
    optional(string()),
    { xmlName: 'CallbackTimeout' },
  ],
});
