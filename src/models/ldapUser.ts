/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { LdapAccount, ldapAccountSchema } from './ldapAccount';
import { LdapAccountsDto, ldapAccountsDtoSchema } from './ldapAccountsDto';
import { LdapRole, ldapRoleSchema } from './ldapRole';
import { LdapRoles, ldapRolesSchema } from './ldapRoles';
import {
  LdapUserPreference,
  ldapUserPreferenceSchema,
} from './ldapUserPreference';
import {
  LdapUserPreferences,
  ldapUserPreferencesSchema,
} from './ldapUserPreferences';
import { UserProfile, userProfileSchema } from './userProfile';
import { UserSettings, userSettingsSchema } from './userSettings';

export interface LdapUser {
  userName?: string;
  email?: string;
  password?: string;
  hasPassword?: boolean;
  validated?: boolean;
  clientCertificate?: string;
  userSettings?: UserSettings;
  userProfile?: UserProfile;
  roles?: LdapRoles;
  accounts?: LdapAccountsDto;
  userPreferences?: LdapUserPreferences;
  reactRequest?: boolean;
  account?: LdapAccount;
  roleList?: LdapRole[];
  userPreferencesList?: LdapUserPreference[];
}

export const ldapUserSchema: Schema<LdapUser> = object({
  userName: ['userName', optional(string()), { xmlName: 'UserId' }],
  email: ['email', optional(string()), { xmlName: 'Email' }],
  password: ['password', optional(string()), { xmlName: 'Password' }],
  hasPassword: ['hasPassword', optional(boolean())],
  validated: ['validated', optional(boolean()), { xmlName: 'EmailValidated' }],
  clientCertificate: [
    'clientCertificate',
    optional(string()),
    { xmlName: 'ClientCertificate' },
  ],
  userSettings: [
    'userSettings',
    optional(lazy(() => userSettingsSchema)),
    { xmlName: 'UserSettings' },
  ],
  userProfile: [
    'userProfile',
    optional(lazy(() => userProfileSchema)),
    { xmlName: 'UserProfile' },
  ],
  roles: [
    'roles',
    optional(lazy(() => ldapRolesSchema)),
    { xmlName: 'RoleList' },
  ],
  accounts: [
    'accounts',
    optional(lazy(() => ldapAccountsDtoSchema)),
    { xmlName: 'AccountList' },
  ],
  userPreferences: [
    'userPreferences',
    optional(lazy(() => ldapUserPreferencesSchema)),
    { xmlName: 'UserPreferences' },
  ],
  reactRequest: [
    'reactRequest',
    optional(boolean()),
    { xmlName: 'ReactRequest' },
  ],
  account: [
    'account',
    optional(lazy(() => ldapAccountSchema)),
    { xmlName: 'LdapAccount' },
  ],
  roleList: [
    'roleList',
    optional(array(lazy(() => ldapRoleSchema))),
    { xmlName: 'Role' },
  ],
  userPreferencesList: [
    'userPreferencesList',
    optional(array(lazy(() => ldapUserPreferenceSchema))),
    { xmlName: 'UserPreference' },
  ],
});
