/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { boolean, number, object, optional, Schema, string } from '../schema';
import {
  UserActivityEventTypeEnum,
  userActivityEventTypeEnumSchema,
} from './userActivityEventTypeEnum';

export interface UserActivityEvent {
  invokingUsername?: string;
  userActivityEventType?: UserActivityEventTypeEnum;
  success?: boolean;
  eventDate?: string;
  containDetails?: boolean;
  eventId?: number;
}

export const userActivityEventSchema: Schema<UserActivityEvent> = object({
  invokingUsername: [
    'invokingUsername',
    optional(string()),
    { xmlName: 'InvokingUser' },
  ],
  userActivityEventType: [
    'userActivityEventType',
    optional(userActivityEventTypeEnumSchema),
    { xmlName: 'Event' },
  ],
  success: ['success', optional(boolean()), { xmlName: 'Success' }],
  eventDate: ['eventDate', optional(string()), { xmlName: 'EventDate' }],
  containDetails: [
    'containDetails',
    optional(boolean()),
    { xmlName: 'ContainDetails' },
  ],
  eventId: ['eventId', optional(number()), { xmlName: 'EventId' }],
});
