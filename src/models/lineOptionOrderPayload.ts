/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { LineOption, lineOptionSchema } from './lineOption';
import {
  LineOptionOrderWarningPayload,
  lineOptionOrderWarningPayloadSchema,
} from './lineOptionOrderWarningPayload';
import {
  LineOptionTelephoneNumberError,
  lineOptionTelephoneNumberErrorSchema,
} from './lineOptionTelephoneNumberError';

export interface LineOptionOrderPayload {
  id?: string;
  accountId?: number;
  name?: string;
  lastModifiedDateInUtc?: string;
  lastModifiedBy?: string;
  createdByUser?: string;
  customerOrderId?: string;
  siteId?: number;
  peerId?: number;
  orderCreateDate?: string;
  lineOptions?: LineOption[];
  completedNumbers?: string[];
  errors?: LineOptionTelephoneNumberError[];
  warnings?: LineOptionOrderWarningPayload[];
}

export const lineOptionOrderPayloadSchema: Schema<LineOptionOrderPayload> = object(
  {
    id: ['id', optional(string()), { xmlName: 'OrderId' }],
    accountId: ['accountId', optional(number()), { xmlName: 'AccountId' }],
    name: ['name', optional(string()), { xmlName: 'Name' }],
    lastModifiedDateInUtc: [
      'lastModifiedDateInUtc',
      optional(string()),
      { xmlName: 'LastModifiedDate' },
    ],
    lastModifiedBy: [
      'lastModifiedBy',
      optional(string()),
      { xmlName: 'LastModifiedBy' },
    ],
    createdByUser: [
      'createdByUser',
      optional(string()),
      { xmlName: 'CreatedByUser' },
    ],
    customerOrderId: [
      'customerOrderId',
      optional(string()),
      { xmlName: 'CustomerOrderId' },
    ],
    siteId: ['siteId', optional(number()), { xmlName: 'SiteId' }],
    peerId: ['peerId', optional(number()), { xmlName: 'PeerId' }],
    orderCreateDate: [
      'orderCreateDate',
      optional(string()),
      { xmlName: 'OrderCreateDate' },
    ],
    lineOptions: [
      'lineOptions',
      optional(array(lazy(() => lineOptionSchema))),
      { xmlName: 'TnLineOptions' },
    ],
    completedNumbers: [
      'completedNumbers',
      optional(array(string(), { xmlItemName: 'TelephoneNumber' })),
      { xmlName: 'CompletedNumbers' },
    ],
    errors: [
      'errors',
      optional(
        array(
          lazy(() => lineOptionTelephoneNumberErrorSchema),
          { xmlItemName: 'Error' }
        )
      ),
      { xmlName: 'Errors' },
    ],
    warnings: [
      'warnings',
      optional(
        array(
          lazy(() => lineOptionOrderWarningPayloadSchema),
          { xmlItemName: 'Warning' }
        )
      ),
      { xmlName: 'Warnings' },
    ],
  }
);
