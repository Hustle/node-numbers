/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { boolean, number, object, optional, Schema, string } from '../schema';

export interface E911Address {
  housePrefix?: string;
  houseNo?: string;
  houseSuffix?: string;
  preDirectional?: string;
  streetName?: string;
  streetSuffix?: string;
  postDirectional?: string;
  addressLine2?: string;
  city?: string;
  stateCode?: string;
  zip?: string;
  zip4?: string;
  county?: string;
  country?: string;
  addressType?: string;
  resetAddressFields?: boolean;
  latitude?: string;
  longitude?: string;
  locationId?: string;
  valid?: boolean;
  endpointCount?: number;
  adjusted?: boolean;
}

export const e911AddressSchema: Schema<E911Address> = object({
  housePrefix: ['housePrefix', optional(string()), { xmlName: 'HousePrefix' }],
  houseNo: ['houseNo', optional(string()), { xmlName: 'HouseNumber' }],
  houseSuffix: ['houseSuffix', optional(string()), { xmlName: 'HouseSuffix' }],
  preDirectional: [
    'preDirectional',
    optional(string()),
    { xmlName: 'PreDirectional' },
  ],
  streetName: ['streetName', optional(string()), { xmlName: 'StreetName' }],
  streetSuffix: [
    'streetSuffix',
    optional(string()),
    { xmlName: 'StreetSuffix' },
  ],
  postDirectional: [
    'postDirectional',
    optional(string()),
    { xmlName: 'PostDirectional' },
  ],
  addressLine2: [
    'addressLine2',
    optional(string()),
    { xmlName: 'AddressLine2' },
  ],
  city: ['city', optional(string()), { xmlName: 'City' }],
  stateCode: ['stateCode', optional(string()), { xmlName: 'StateCode' }],
  zip: ['zip', optional(string()), { xmlName: 'Zip' }],
  zip4: ['zip4', optional(string()), { xmlName: 'PlusFour' }],
  county: ['county', optional(string()), { xmlName: 'County' }],
  country: ['country', optional(string()), { xmlName: 'Country' }],
  addressType: ['addressType', optional(string()), { xmlName: 'AddressType' }],
  resetAddressFields: [
    'resetAddressFields',
    optional(boolean()),
    { xmlName: 'ResetAddressFields' },
  ],
  latitude: ['latitude', optional(string()), { xmlName: 'Latitude' }],
  longitude: ['longitude', optional(string()), { xmlName: 'Longitude' }],
  locationId: ['locationId', optional(string()), { xmlName: 'LocationId' }],
  valid: ['valid', optional(boolean()), { xmlName: 'ValidationStatus' }],
  endpointCount: [
    'endpointCount',
    optional(number()),
    { xmlName: 'EndpointCount' },
  ],
  adjusted: ['adjusted', optional(boolean()), { xmlName: 'Adjusted' }],
});
