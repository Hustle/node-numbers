/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { lazy, object, optional, Schema, string } from '../schema';
import {
  E911GeocodeAddress,
  e911GeocodeAddressSchema,
} from './e911GeocodeAddress';
import {
  GeocodeRequestAddress,
  geocodeRequestAddressSchema,
} from './geocodeRequestAddress';

export interface GeocodeRequestResponse {
  payload?: GeocodeRequestAddress;
  errors?: string;
  geocodeAddress?: E911GeocodeAddress;
}

export const geocodeRequestResponseSchema: Schema<GeocodeRequestResponse> = object(
  {
    payload: [
      'payload',
      optional(lazy(() => geocodeRequestAddressSchema)),
      { xmlName: 'RequestAddress' },
    ],
    errors: ['errors', optional(string()), { xmlName: 'Errors' }],
    geocodeAddress: [
      'geocodeAddress',
      optional(lazy(() => e911GeocodeAddressSchema)),
      { xmlName: 'GeocodedAddress' },
    ],
  }
);
