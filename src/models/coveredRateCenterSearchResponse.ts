/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { array, lazy, number, object, optional, Schema } from '../schema';
import {
  CoveredRateCenter,
  coveredRateCenterSchema,
} from './coveredRateCenter';
import { PaginationLinks, paginationLinksSchema } from './paginationLinks';

export interface CoveredRateCenterSearchResponse {
  paginationLinks?: PaginationLinks;
  totalCount?: number;
  coveredRateCenters?: CoveredRateCenter[];
}

export const coveredRateCenterSearchResponseSchema: Schema<CoveredRateCenterSearchResponse> = object(
  {
    paginationLinks: [
      'paginationLinks',
      optional(lazy(() => paginationLinksSchema)),
      { xmlName: 'Links' },
    ],
    totalCount: ['totalCount', optional(number()), { xmlName: 'TotalCount' }],
    coveredRateCenters: [
      'CoveredRateCenters',
      optional(array(lazy(() => coveredRateCenterSchema))),
      { xmlName: 'CoveredRateCenter' },
    ],
  }
);
