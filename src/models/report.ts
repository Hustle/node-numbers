/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { ReportParameter, reportParameterSchema } from './reportParameter';

export interface Report {
  id?: number;
  name?: string;
  jasperUri?: string;
  scope?: string;
  displayPriority?: string;
  description?: string;
  parameters?: ReportParameter[];
}

export const reportSchema: Schema<Report> = object({
  id: ['id', optional(number()), { xmlName: 'Id' }],
  name: ['name', optional(string()), { xmlName: 'Name' }],
  jasperUri: ['jasperUri', optional(string()), { xmlName: 'JasperUri' }],
  scope: ['scope', optional(string()), { xmlName: 'Scope' }],
  displayPriority: [
    'displayPriority',
    optional(string()),
    { xmlName: 'DisplayPriority' },
  ],
  description: ['description', optional(string()), { xmlName: 'Description' }],
  parameters: [
    'parameters',
    optional(
      array(lazy(() => reportParameterSchema), { xmlItemName: 'Parameter' })
    ),
    { xmlName: 'Parameters' },
  ],
});
