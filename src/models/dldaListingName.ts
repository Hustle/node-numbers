/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { object, optional, Schema, string } from '../schema';

export interface DldaListingName {
  firstName?: string;
  firstName2?: string;
  lastName?: string;
  designation?: string;
  titleOfLineage?: string;
  titleOfAddress?: string;
  titleOfAddress2?: string;
  titleOfLineageName2?: string;
  titleOfAddressName2?: string;
  titleOfAddress2Name2?: string;
  placeListingAs?: string;
}

export const dldaListingNameSchema: Schema<DldaListingName> = object({
  firstName: ['firstName', optional(string()), { xmlName: 'FirstName' }],
  firstName2: ['firstName2', optional(string()), { xmlName: 'FirstName2' }],
  lastName: ['lastName', optional(string()), { xmlName: 'LastName' }],
  designation: ['designation', optional(string()), { xmlName: 'Designation' }],
  titleOfLineage: [
    'titleOfLineage',
    optional(string()),
    { xmlName: 'TitleOfLineage' },
  ],
  titleOfAddress: [
    'titleOfAddress',
    optional(string()),
    { xmlName: 'TitleOfAddress' },
  ],
  titleOfAddress2: [
    'titleOfAddress2',
    optional(string()),
    { xmlName: 'TitleOfAddress2' },
  ],
  titleOfLineageName2: [
    'titleOfLineageName2',
    optional(string()),
    { xmlName: 'TitleOfLineageName2' },
  ],
  titleOfAddressName2: [
    'titleOfAddressName2',
    optional(string()),
    { xmlName: 'TitleOfAddressName2' },
  ],
  titleOfAddress2Name2: [
    'titleOfAddress2Name2',
    optional(string()),
    { xmlName: 'TitleOfAddress2Name2' },
  ],
  placeListingAs: [
    'placeListingAs',
    optional(string()),
    { xmlName: 'PlaceListingAs' },
  ],
});
