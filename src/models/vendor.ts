/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { boolean, number, object, optional, Schema, string } from '../schema';

export interface Vendor {
  id?: number;
  name?: string;
  legacyId?: string;
  manualPortEnabled?: boolean;
  tollfreeManualPortEnabled?: boolean;
  isOnNet?: boolean;
}

export const vendorSchema: Schema<Vendor> = object({
  id: ['id', optional(number()), { xmlName: 'VendorId' }],
  name: ['name', optional(string()), { xmlName: 'VendorName' }],
  legacyId: ['legacyId', optional(string()), { xmlName: 'LegacyId' }],
  manualPortEnabled: [
    'manualPortEnabled',
    optional(boolean()),
    { xmlName: 'ManualPortEnabled' },
  ],
  tollfreeManualPortEnabled: [
    'tollfreeManualPortEnabled',
    optional(boolean()),
    { xmlName: 'TollfreeManualPortEnabled' },
  ],
  isOnNet: ['isOnNet', optional(boolean()), { xmlName: 'OnNet' }],
});
