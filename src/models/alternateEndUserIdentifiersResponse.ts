/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { lazy, number, object, optional, Schema } from '../schema';
import {
  AlternateEndUserIdentifiers,
  alternateEndUserIdentifiersSchema,
} from './alternateEndUserIdentifiers';
import { PaginationLinks, paginationLinksSchema } from './paginationLinks';

export interface AlternateEndUserIdentifiersResponse {
  payload?: AlternateEndUserIdentifiers;
  paginationLinks?: PaginationLinks;
  totalCount?: number;
}

export const alternateEndUserIdentifiersResponseSchema: Schema<AlternateEndUserIdentifiersResponse> = object(
  {
    payload: [
      'payload',
      optional(lazy(() => alternateEndUserIdentifiersSchema)),
      { xmlName: 'AlternateEndUserIdentifiers' },
    ],
    paginationLinks: [
      'paginationLinks',
      optional(lazy(() => paginationLinksSchema)),
      { xmlName: 'Links' },
    ],
    totalCount: ['totalCount', optional(number()), { xmlName: 'TotalCount' }],
  }
);
