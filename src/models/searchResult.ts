/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { IrisStatus, irisStatusSchema } from './irisStatus';
import { SearchError, searchErrorSchema } from './searchError';
import {
  TelephoneNumberDetail,
  telephoneNumberDetailSchema,
} from './telephoneNumberDetail';

export interface SearchResult {
  searchError?: SearchError;
  resultSize?: number;
  status?: IrisStatus;
  telephoneNumberList?: string[];
  telephoneNumberDetailList?: TelephoneNumberDetail[];
}

export const searchResultSchema: Schema<SearchResult> = object({
  searchError: [
    'searchError',
    optional(lazy(() => searchErrorSchema)),
    { xmlName: 'Error' },
  ],
  resultSize: ['resultSize', optional(number()), { xmlName: 'ResultCount' }],
  status: [
    'status',
    optional(lazy(() => irisStatusSchema)),
    { xmlName: 'Status' },
  ],
  telephoneNumberList: [
    'TelephoneNumberList',
    optional(array(string(), { xmlItemName: 'TelephoneNumber' })),
  ],
  telephoneNumberDetailList: [
    'TelephoneNumberDetailList',
    optional(
      array(
        lazy(() => telephoneNumberDetailSchema),
        { xmlItemName: 'TelephoneNumberDetail' }
      )
    ),
  ],
});
