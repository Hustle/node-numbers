/**
 * bandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { array, boolean, lazy, object, optional, Schema } from '../schema';
import { IrisStatus, irisStatusSchema } from './irisStatus';
import { LnpError, lnpErrorSchema } from './lnpError';
import { PhoneNumber, phoneNumberSchema } from './phoneNumber';

export interface LnpAvailabilityCheckResponse {
  status?: IrisStatus;
  errors?: LnpError[];
  phoneNumber?: PhoneNumber;
  available?: boolean;
}

export const lnpAvailabilityCheckResponseSchema: Schema<LnpAvailabilityCheckResponse> = object(
  {
    status: [
      'status',
      optional(lazy(() => irisStatusSchema)),
      { xmlName: 'Status' },
    ],
    errors: [
      'errors',
      optional(array(lazy(() => lnpErrorSchema))),
      { xmlName: 'Errors' },
    ],
    phoneNumber: [
      'phoneNumber',
      optional(lazy(() => phoneNumberSchema)),
      { xmlName: 'PhoneNumber' },
    ],
    available: ['available', optional(boolean()), { xmlName: 'Available' }],
  }
);
